plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
}

group = 'com.onarandombox.legacy'
version = '1.1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc"
        url = uri("https://repo.papermc.io/repository/maven-public/")
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = 'onarandombox'
        url = uri('https://repo.onarandombox.com/content/groups/public')
    }
}

dependencies {
    compileOnly('io.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT')
    compileOnly('org.mvplugins.multiverse.core:multiverse-core:5.0.0-SNAPSHOT')
    compileOnly('org.mvplugins.multiverse.inventories:multiverse-inventories:5.0.0-SNAPSHOT')
    compileOnly('org.mvplugins.multiverse.portals:multiverse-portals:5.0.0-SNAPSHOT')
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.18")
    }
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
